Looking into the changes in the contents of each file using the diff -u command makes it easier to to spot the exact places of differences

How could having easy access to the entire history of a file make you a more efficient programmer in the long term?
We will be able to keep track of what was the exact requirement behind every change made


What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google Docs does?
pros:
you decide what is crucial and needs a different commit for that particular change

cons:
Forgetfullness. If you don't do a commit periodically and the changes are piled up, it might seem confusing at a later point as to why were so many changes required in the first place

Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?
Because Git has the concept of repository, i.e., a single repository may contain a combination of several files 

How can you use the commands git log and git diff to view the history of files?
git log : To check the order of commits and use git log --stat to see the #of additions and deletions as part of that commit
git diff : Shows the changes made part of that commit

Now that you have your workspace set up, what do you want to try using Git for?
For Version control
